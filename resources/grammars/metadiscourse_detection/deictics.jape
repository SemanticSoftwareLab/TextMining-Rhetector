//
// Rhetorical Entity Extraction -- http://www.semanticsoftware.info/rhetector
//
// This file is part of the Rhetector component.
//
// Copyright (c) 2015, Semantic Software Lab, http://www.semanticsoftware.info
//    Rene Witte
//    Bahar Sateli
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 3.0 of the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library.  If not, see <http://www.gnu.org/licenses/>.
//

Phase: Deictics
Input: Lookup Token

Options: control = appelt debug=true

Rule: Deictic
// Throughout this paper...
(
	{Token.category == "IN", Token.orth == "upperInitial"}
	{Token.category == "DT"}
	{Lookup.majorType ==	"DEICTIC"}
)
:mention
-->
 :mention.Deictic = {rule = "INDetDeictic", content = :mention@string}

Rule: Deictic
// This paper...
(
	{Token.category == "DT", Token.orth == "upperInitial"}
	{Lookup.majorType ==	"DEICTIC"}
)
:mention
-->
 :mention.Deictic = {rule = "DetDeictic", content = :mention@string}
 
 Rule: Deictic
// our study...
// our prototype library
(
	{Token.category == "PRP$"}
	({Lookup.majorType ==	"DEICTIC"})+
)
:mention
-->
:mention.Deictic = {rule = "PRP$Deictic", content = :mention@string}

